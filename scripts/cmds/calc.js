const math = require("mathjs");

module.exports = {
  config: {
    name: "calc",
    aliases: ["calculate", "math"],
    version: "1.1",
    author: "eran_hossain",
    countDown: 5,
    role: 0,
    shortDescription: "Quick calculator",
    longDescription: "Perform basic and advanced math calculations easily.",
    category: "utility",
    guide: {
      en: "{pn} [expression]\nExample: {pn} 12 * (3 + 4)",
      bn: "{pn} [‡¶ó‡¶£‡¶®‡¶æ‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞]\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: {pn} 12 * (3 + 4)"
    }
  },

  onStart: async function ({ message, args, language }) {
    const lang = language || "en"; // default to English

    if (!args.length) {
      const msg =
        lang === "bn"
          ? "‚ö†Ô∏è ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡¶£‡¶®‡¶æ‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: calc 5*5+10"
          : "‚ö†Ô∏è Please enter a math expression.\nExample: calc 5*5+10";
      return message.reply(msg);
    }

    try {
      const expression = args.join(" ");
      const result = math.evaluate(expression);
      const replyMsg =
        lang === "bn"
          ? `üßÆ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞: ${expression}\n‚úÖ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤: ${result}`
          : `üßÆ Expression: ${expression}\n‚úÖ Result: ${result}`;
      message.reply(replyMsg);
    } catch (err) {
      const errorMsg =
        lang === "bn"
          ? "‚ùå ‡¶Ö‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞! ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"
          : "‚ùå Invalid expression! Please try again.";
      message.reply(errorMsg);
    }
  }
};
